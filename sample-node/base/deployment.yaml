apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  labels:
    app: sample-node
    app.kubernetes.io/name: sample-node
  name: sample-node
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: sample-node
  # strategy:
  #   blueGreen:
  #     # activeService specifies the service to update with the new template hash at time of promotion.
  #     # This field is mandatory for the blueGreen update strategy.
  #     activeService: sample-node
  #     # previewService specifies the service to update with the new template hash before promotion.
  #     # This allows the preview stack to be reachable without serving production traffic.
  #     # This field is optional.
  #     previewService: sample-node-preview
  #     # autoPromotionEnabled disables automated promotion of the new stack by pausing the rollout
  #     # immediately before the promotion. If omitted, the default behavior is to promote the new
  #     # stack as soon as the ReplicaSet are completely ready/available.
  #     # Rollouts can be resumed using: `kubectl argo rollouts resume ROLLOUT`
  #     autoPromotionEnabled: false
  #   canary:
  #     steps:
  #       - setWeight: 20
  #       # The following pause step will pause the rollout indefinitely until manually resumed.
  #       # Rollouts can be manually resumed by running `kubectl argo rollouts resume ROLLOUT`
  #       - pause: {}
  #       - setWeight: 40
  #       - pause: { duration: 40 }
  #       - setWeight: 60
  #       - pause: { duration: 20 }
  #       - setWeight: 80
  #       - pause: { duration: 20 }
  template:
    metadata:
      labels:
        app: sample-node
        app.kubernetes.io/name: sample-node
    spec:
      containers:
        - image: nalbam/sample-node:v0.3.13
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: sample-node
          ports:
            - containerPort: 3000
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 120m
              memory: 153Mi
            requests:
              cpu: 100m
              memory: 128Mi
