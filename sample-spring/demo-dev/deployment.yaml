apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  labels:
    app: sample-spring
    app.kubernetes.io/name: sample-spring
  name: sample-spring
spec:
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: sample-spring
  strategy:
    blueGreen:
      activeService: sample-spring
      autoPromotionEnabled: true
      autoPromotionSeconds: 60
      previewService: sample-spring-preview
  template:
    metadata:
      annotations:
        prometheus.io/port: '8081'
        prometheus.io/scrape: 'true'
      labels:
        app: sample-spring
        app.kubernetes.io/name: sample-spring
        version: v0.4.33
    spec:
      containers:
      - env:
        - name: CONFIGMAP_HASH
          value: cf31a8386bc5d8bf6056c323e30e6179
        - name: SECRET_HASH
          value: ''
        envFrom:
        - configMapRef:
            name: sample-spring
        image: nalbam/sample-spring:v0.4.33
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: sample-spring
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 8081
          name: tcp-jmx
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 550m
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 1Gi
